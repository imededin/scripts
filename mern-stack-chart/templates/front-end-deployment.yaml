apiVersion: apps/v1
kind: Deployment
metadata:
  name: front-end
  labels:
    app: frontend-app
    namespace: {{ .Values.ns_name}}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: frontend-app
      
  template:
    metadata:
      labels:
        app: frontend-app
    spec:
      serviceAccountName: {{ include "mern-stack.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: frontend
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository.frontend }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.container.frontend_port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-svc
  labels:
    app: frontend-app
    namespace: {{ .Values.ns_name}}
    
spec:
  type: {{ .Values.service.type }}
  ports:
    - name: tcp
      protocol: TCP
      port: 3000
      targetPort: {{ .Values.container.frontend_port }} 
  selector:
    app: frontend-app
    