{{- range .Values.services }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .name }}-deployment
  labels:
    app: {{ .name }}-deployment
    namespace: {{ $.Values.ns_name}}
spec:
  {{- if not $.Values.autoscaling.enabled }}
  replicas: {{ $.Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .name }}
      
  template:
    metadata:
      labels:
        app: {{ .name }}
    spec:
     
      containers:
        - name: {{ .name }}
          
          image: "{{ .image }}:{{ $.Values.version | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ $.Values.imagePullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: PORT
              value: "3000"
            - name: DB_URL
              value: "{{ $.Values.db.type}}://root:{{ $.Values.db.password}}@{{ $.Values.db.name}}.{{ $.Values.ns_name}}.svc.cluster.local"
          # livenessProbe:
          #   httpGet:
          #     path: frontend-svc
          #     port: 3000
          # readinessProbe:
          #   httpGet:
          #     path: frontend-svc
          #     port: 3000
          resources:
            {{- toYaml $.Values.resources | nindent 12 }}
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---

apiVersion: v1
kind: Service
metadata:
  name: {{ .name }}-svc
  labels:
    app: {{ .name }}
    namespace: {{ $.Values.ns_name}}
    
spec:
  type: {{ $.Values.service.type }}
  ports:
    - name: tcp
      protocol: TCP
      port: 3302
      targetPort: 3000
  selector:
    app: {{ .name }}
---
{{- end }}